import { Text, Pressable, View, StyleSheet, Dimensions } from "react-native";
import { useState } from "react";
import DateTimePicker from "@react-native-community/datetimepicker";
import { getFormattedDate } from "../../util/date";
import { GlobalStyles } from "../../constants/GlobalStyles";
import { useLanguage } from "../../store/context/LanguageContext";

const { height } = Dimensions.get("window");
/**
 * A component to display a date in a human-readable format and allow the user to edit it via a date picker.
 *
 * @param {{ date: Date, setDate: (date: Date) => void }} props
 * @param {Date} props.date The date to be displayed and edited.
 * @param {(date: Date) => void} props.setDate A function to update the date in the parent component.
 *
 * @returns {JSX.Element} A Pressable component with a Text component displaying the date and a DateTimePicker component to edit the date.
 */
function DatePicker({ date, setDate }) {
  const [showDate, setShowDate] = useState(false);

  const { translate } = useLanguage();

  /**
   * Show the date picker.
   *
   * This function is called when the user taps the date display. It simply sets the state to show the date picker.
   */
  function showDatePicker() {
    setShowDate(true);
  }

  /**
   * Change the date in the parent component.
   *
   * This function is called when the user selects a date in the date picker. It updates the date in the parent component and hides the date picker.
   * @param {object} event - The event generated by the DateTimePicker component.
   * @param {Date} selectedDate - The selected date.
   */
  function onChangeDatePicker(event, selectedDate) {
    const currentDate = selectedDate;
    setDate(currentDate);

    setShowDate(false);
  }
  return (
    <Pressable style={styles.dateContainer} onPress={showDatePicker}>
      <View>
        <Text style={styles.dateText}>
          {translate("ExpenseDate")} {getFormattedDate(date)}
        </Text>
        {showDate && (
          <DateTimePicker
            mode="date"
            value={date}
            onChange={onChangeDatePicker}
            display="spinner"
          />
        )}
      </View>
    </Pressable>
  );
}

export default DatePicker;

const styles = StyleSheet.create({
  dateContainer: {
    width: "60%",
    paddingHorizontal: height * 0.02,
    paddingVertical: height * 0.01,
    borderRadius: 5,
    alignItems: "center",

    backgroundColor: GlobalStyles.colors.backGroundSecondaryInactive,
  },
  dateText: {
    fontSize: height * 0.015,
    color: GlobalStyles.colors.textColor,
  },
});
